//
// test.ast - Sample AST description for treegen
//

target CPlusPlus {

  // In string literals,
  //   $$ is target/variable (for externs)
  //   $_ is "this" or "self", etc. (for nodes and externs)
  //   $@ is the type (for nodes and externs)

  header_only: true;
  strong_ptr: "$@*";
  weak_ptr: "$@*";
  //allocator: "new $@";
  //deleter: "delete($$)";
  list_type: "std::vector<$@>";
  use_line_directives: true;
  use_accessors: true;
  namespace: "Tree";
  epilog: "data/header.txt";
  prolog: "data/footer.txt";

  includes: [ "<vector>", "<iostream>" ];

  // stuffed at end of class decl
  class_extra: [ "void codegen(std::ostream& cio);" ];

  extern D {
    type:      "D*";
    construct: "$$ = new D($_);";
    destruct:  "delete $$;";
  }
}

visitor AstVisitor {
  visit_method: "visit";
  accept_method: "accept";
  preorder: true;
  inorder: true;
  postorder: true;
  visit_children: true;
}

abstract node A {
	int f1;
	string f2;
	A(f1);
}

node B : A {
	C f3;
	B(f3);
}

node C : B {
	D f4;
	C(f4);
}
